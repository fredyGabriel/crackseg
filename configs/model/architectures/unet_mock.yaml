# @package _global_

# Configuration for a UNet using mock components for testing

# Inherit base structure and override components
ddefaults:
  - model: default  # Inherit base UNet schema (_target_, type, final_activation)
  - _self_

# Override component sections with mock configurations
model:
  # Use the actual BaseUNet implementation as the target
  _target_: src.model.core.unet.BaseUNet
  # type: BaseUNet  # Type is less relevant if using _target_ directly

  encoder:
    in_channels: 3
    _target_: tests.integration.model.conftest.MockEncoder

  bottleneck:
    in_channels: 64  # Matches MockEncoder output
    _target_: tests.integration.model.conftest.MockBottleneck

  decoder:
    in_channels: 128  # Matches MockBottleneck output
    # El decoder espera los skips en orden low->high res: [32, 16]
    # Esto debe ser el reverse de MockEncoder.skip_channels ([16, 32])
    skip_channels_list: [32, 16]
    _target_: tests.integration.model.conftest.TestDecoderImpl

  # Optional: Override final activation
  final_activation:
    _target_: torch.nn.Sigmoid

# Specific UNet configuration (can override defaults if needed)
# type: TestUNet  # Optional: If TestUNet was registered in unet_registry

# Example override: Add final activation
final_activation:
  _target_: torch.nn.Sigmoid 