# @package model

# Base UNet configuration schema for segmentation model

_target_: src.model.core.unet.BaseUNet   # Main UNet class to instantiate

# --- Component Configurations ---
# Each section defines the configuration for a model component

encoder:
  _target_: src.model.encoder.CNNEncoder   # Encoder class
  in_channels: 3                          # Number of input channels (e.g., RGB)
  init_features: 32                       # Initial number of features (reduces memory)
  depth: 4                                # Number of encoder blocks (e.g., 32, 64, 128, 256)

bottleneck:
  _target_: src.model.bottleneck.BottleneckBlock  # Bottleneck class
  in_channels: 256                        # Must match encoder output: init_features * 2^(depth-1)
  out_channels: 512                       # Output channels (reduced for memory, 2:1 ratio)

decoder:
  _target_: src.model.decoder.CNNDecoder  # Decoder class
  in_channels: 512                        # Must match bottleneck out_channels
  skip_channels_list: [256, 128, 64, 32]  # Skip connection channels (reverse encoder order)
  out_channels: 1                         # Number of output classes
  depth: 4                                # Decoder depth (should match encoder)

# --- Optional Final Activation ---
final_activation: null                    # Optional final activation (e.g., Sigmoid)
# Example:
# final_activation:
#   _target_: torch.nn.Sigmoid 