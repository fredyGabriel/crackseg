# SwinV2 Hybrid Architecture Experiment Configuration - 360x360 Optimized
#
# This configuration defines the specific overrides for the SwinV2 + ASPP + CNN
# hybrid architecture experiment optimized for 360x360 images from unified dataset.
#
# Architecture: SwinV2CnnAsppUNet
# Loss: FocalDiceLoss (focal_weight=0.6, dice_weight=0.4)
# Target: Optimize for thin crack detection (1-5 pixels wide)
# Dataset: unified/ (1,754 images, 360x360 pixels)
#
# Hardware: Optimized for RTX 3070 Ti (8GB VRAM)
# Expected Performance: IoU > 0.85, F1 > 0.90 on crack segmentation tasks
# Memory Optimization: Batch size 2, gradient accumulation 8, mixed precision

# Inherit from base configuration and apply specific overrides
defaults:
  - _self_ # This file's overrides (highest priority)
  - /base  # Include base configuration first
  - /model: default
  - /data: default
  - /data/transform: augmentations
  - /data/dataloader: default
  - /evaluation: default

# General project settings (from base)
project_name: "crack-segmentation"
output_dir: artifacts/
data_dir: data/
random_seed: 42
seed: 42
debug: false

# Experiment configuration - CRITICAL: This overrides the base "main_experiment"
experiment:
  name: "swinv2_hybrid_360x360_experiment"
  output_dir: "artifacts/experiments/${now:%Y%m%d-%H%M%S}-swinv2_hybrid_360x360"
  timestamp: true

# Experiment-specific hydra configuration - CRITICAL: Override base hydra config
hydra:
  # Configure output directory generation to use experiment name
  run:
    dir: artifacts/experiments/${now:%Y%m%d-%H%M%S}-${experiment.name}
  # Configure experiment ID for proper tracking
  job:
    name: ${experiment.name}
    chdir: false

# Model architecture overrides for SwinV2 hybrid - 360x360 optimized
model:
  _target_: crackseg.model.architectures.swinv2_cnn_aspp_unet.SwinV2CnnAsppUNet
  encoder:
    _target_: crackseg.model.encoder.swin_v2_adapter.SwinV2EncoderAdapter
    model_name: "swinv2_tiny_window8_256"  # Compatible with 360x360
    img_size: 360  # Updated for 360x360 images
    target_img_size: 360  # Updated for 360x360 images
    in_channels: 3
  bottleneck:
    _target_: crackseg.model.components.aspp.ASPPModule
    in_channels: 768  # SwinV2-tiny output channels
    output_channels: 256
    dilation_rates: [1, 6, 12, 18]
    dropout_rate: 0.1
  decoder:
    _target_: crackseg.model.decoder.cnn_decoder.CNNDecoder
    in_channels: 256
    skip_channels_list: [384, 192, 96]  # From SwinV2 encoder output
    config:
      use_cbam: true
      cbam_reduction: 16
      upsample_mode: "bilinear"
      kernel_size: 3
      padding: 1
      upsample_scale_factor: 2
  num_classes: 1
  final_activation: "sigmoid"

# Training configuration overrides for SwinV2 hybrid - VRAM optimized
training:
  # Training parameters optimized for RTX 3070 Ti with 360x360 images
  epochs: 2
  learning_rate: 0.0001
  batch_size: 4  # Increased to avoid BatchNorm issues
  num_workers: 4
  gradient_accumulation_steps: 4  # Effective batch size = 4 * 4 = 16
  use_amp: true  # Mixed precision for memory efficiency

  # Device configuration
  device: "auto"
  require_cuda: false

  # Checkpoint configuration
  checkpoint_dir: "artifacts/experiments"
  save_freq: 5  # Save every 5 epochs
  save_best: true
  monitor_metric: "val_iou"  # Monitor validation IoU
  monitor_mode: "max"  # Maximize IoU

  # Early stopping configuration - more patient for 360x360
  early_stopping_patience: 20  # Increased patience for larger images
  early_stopping:
    _target_: crackseg.utils.training.early_stopping.EarlyStopping
    enabled: True
    patience: 20
    min_delta: 0.001
    mode: "max"  # Maximize IoU
    monitor_metric: "val_iou"  # Consistent with monitor_metric above
    verbose: True

  # Logging configuration
  logging:
    log_freq: 5  # More frequent logging for monitoring
    tensorboard: true
    wandb: false

  # Validation configuration
  validation:
    freq: 1  # Validate every epoch
    save_predictions: true
    save_visualizations: true

  # Loss configuration - optimized for crack segmentation
  loss:
    _target_: crackseg.training.losses.focal_dice_loss.FocalDiceLoss
    config:
      _target_: crackseg.training.losses.focal_dice_loss.FocalDiceLossConfig
      focal_weight: 0.6  # Focal loss for hard examples
      dice_weight: 0.4   # Dice loss for class imbalance
      focal_alpha: 0.25  # Alpha for focal loss
      focal_gamma: 2.0   # Gamma for focal loss
      focal_reduction: "mean"
      dice_smooth: 1.0
      dice_sigmoid: true
      dice_eps: 1e-6
      total_loss_weight: 1.0

  # Optimizer configuration - AdamW for Transformers
  optimizer:
    _target_: torch.optim.AdamW
    lr: 0.0001
    weight_decay: 0.01
    betas: [0.9, 0.999]
    eps: 1e-8

  # Scheduler configuration - cosine annealing with warm restarts
  scheduler:
    T_0: 20  # Restart every 20 epochs
    T_mult: 2  # Double the restart interval
    eta_min: 1e-6

  # Gradient clipping
  grad_clip: 1.0

# Data configuration overrides for unified dataset - 360x360
data:
  data_root: data/unified/  # Path to unified dataset
  root_dir: data/unified/
  train_split: 0.7  # 1,228 training images
  val_split: 0.15   # 263 validation images
  test_split: 0.15  # 263 test images
  seed: 42
  in_memory_cache: False  # Disabled for memory efficiency
  use_unified_splitting: True
  image_size: [360, 360]  # Updated for 360x360 images
  dataloader:
    batch_size: 4  # Increased batch size to avoid BatchNorm issues
    num_workers: 4
    pin_memory: true
    persistent_workers: true
    prefetch_factor: 2
    drop_last: true

# Data augmentation configuration - optimized for crack detection
data/transform:
  train:
    _target_: albumentations.Compose
    transforms:
      # Spatial augmentations - preserve thin crack structures
      - _target_: albumentations.RandomRotate90
        p: 0.5
      - _target_: albumentations.Flip
        p: 0.5
      - _target_: albumentations.ShiftScaleRotate
        shift_limit: 0.1
        scale_limit: 0.1
        rotate_limit: 15
        border_mode: 1  # cv2.BORDER_REFLECT
        p: 0.5

      # Elastic transform - simulate crack variations
      - _target_: albumentations.ElasticTransform
        alpha: 50
        sigma: 5
        alpha_affine: 0
        p: 0.3

      # Photometric augmentations - enhance crack visibility
      - _target_: albumentations.RandomBrightnessContrast
        brightness_limit: 0.2
        contrast_limit: 0.2
        p: 0.5
      - _target_: albumentations.CLAHE
        clip_limit: 2.0
        tile_grid_size: [8, 8]
        p: 0.3

      # Normalization
      - _target_: albumentations.Normalize
        mean: [0.485, 0.456, 0.406]
        std: [0.229, 0.224, 0.225]
        max_pixel_value: 255.0
      - _target_: albumentations.ToTensorV2

  val:
    _target_: albumentations.Compose
    transforms:
      - _target_: albumentations.Normalize
        mean: [0.485, 0.456, 0.406]
        std: [0.229, 0.224, 0.225]
        max_pixel_value: 255.0
      - _target_: albumentations.ToTensorV2

  test:
    _target_: albumentations.Compose
    transforms:
      - _target_: albumentations.Normalize
        mean: [0.485, 0.456, 0.406]
        std: [0.229, 0.224, 0.225]
        max_pixel_value: 255.0
      - _target_: albumentations.ToTensorV2

# Evaluation configuration
evaluation:
  metrics:
    - _target_: crackseg.evaluation.metrics.IoUMetric
      num_classes: 1
      threshold: 0.5
    - _target_: crackseg.evaluation.metrics.DiceMetric
      num_classes: 1
      threshold: 0.5
    - _target_: crackseg.evaluation.metrics.F1Metric
      num_classes: 1
      threshold: 0.5
    - _target_: crackseg.evaluation.metrics.PrecisionMetric
      num_classes: 1
      threshold: 0.5
    - _target_: crackseg.evaluation.metrics.RecallMetric
      num_classes: 1
      threshold: 0.5

# Memory optimization settings
memory:
  gradient_checkpointing: true  # Enable for memory efficiency
  empty_cache_freq: 100  # Clear cache every 100 steps
  monitor_memory: true  # Log memory usage

# Hardware-specific optimizations for RTX 3070 Ti
hardware:
  cudnn_benchmark: false  # Disable for reproducibility
  cudnn_deterministic: true  # Enable for reproducibility
  mixed_precision: true  # Enable AMP
  memory_efficient_attention: false  # Disable for compatibility