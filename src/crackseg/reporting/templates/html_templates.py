"""HTML templates for experiment reports.

This module provides professional HTML templates for generating
interactive experiment reports with modern styling and features.
"""

from abc import ABC, abstractmethod

from .utils.html_common import default_css, html_wrap


class BaseHTMLTemplate(ABC):
    """Base class for HTML templates."""

    @abstractmethod
    def get_template_content(self) -> str:
        """Get template content."""
        pass

    def get_css_styles(self) -> str:
        """Get CSS styles for the template."""
        return default_css()


class HTMLExecutiveSummaryTemplate(BaseHTMLTemplate):
    """Executive summary HTML template."""

    def get_template_content(self) -> str:
        """Get executive summary HTML template content."""
        body = """
    <div class="container">
        <h1>{title}</h1>
        <p><em>Experiment Report - Executive Summary</em><br>
        <small>Generated on {generation_timestamp}</small></p>

        <div class="summary-box">
            <h2>📊 Executive Summary</h2>
            <p>{executive_summary}</p>
        </div>

        <h2>🎯 Key Findings</h2>
        <div class="experiment-info">
            {key_findings}
        </div>

        <h2>📈 Performance Overview</h2>
        <div class="metric-card">
            {performance_metrics}
        </div>

        <h2>🚀 Recommendations</h2>
        <div class="recommendation">
            {recommendations}
        </div>

        <h2>📋 Experiment Details</h2>
        <div class="experiment-info">
            <div class="info-item">
                <div class="info-label">Experiment ID</div>
                <div class="info-value">{experiment_id}</div>
            </div>
            <div class="info-item">
                <div class="info-label">Experiment Name</div>
                <div class="info-value">{experiment_name}</div>
            </div>
            <div class="info-item">
                <div class="info-label">Status</div>
                <div class="info-value">
                    <span class="badge badge-{status_badge}">
                        {status}
                    </span>
                </div>
            </div>
            <div class="info-item">
                <div class="info-label">Duration</div>
                <div class="info-value">{duration}</div>
            </div>
        </div>

        <div class="footer">
            <p>Report generated by CrackSeg Experimental Reporting System</p>
        </div>
    </div>
"""
        return html_wrap("{{title}}", self.get_css_styles(), body)


class HTMLPublicationTemplate(BaseHTMLTemplate):
    """Publication-ready HTML template."""

    def get_template_content(self) -> str:
        """Get publication-ready HTML template content."""
        body = """
    <div class="container">
        <h1>{title}</h1>
        <p><em>Crack Segmentation Experiment Report</em><br>
        <small>{generation_timestamp}</small></p>

        <h2>Abstract</h2>
        <div class="summary-box">
            <p>{abstract}</p>
        </div>

        <h2>1. Introduction</h2>
        <p>{introduction}</p>

        <h2>2. Methodology</h2>

        <h3>2.1 Model Architecture</h3>
        <div class="experiment-info">
            {model_architecture}
        </div>

        <h3>2.2 Training Configuration</h3>
        <div class="experiment-info">
            {training_config}
        </div>

        <h3>2.3 Dataset</h3>
        <p>{dataset_description}</p>

        <h2>3. Results</h2>

        <h3>3.1 Performance Metrics</h3>
        <div class="metric-card">
            {performance_metrics}
        </div>

        <h3>3.2 Training Analysis</h3>
        <div class="chart-container">
            {training_curves}
        </div>

        <h3>3.3 Comparative Analysis</h3>
        <div class="chart-container">
            {comparison_results}
        </div>

        <h2>4. Discussion</h2>
        <p>{discussion}</p>

        <h2>5. Conclusions</h2>
        <p>{conclusions}</p>

        <h2>6. Future Work</h2>
        <p>{future_work}</p>

        <h2>References</h2>
        <div class="summary-box">
            {references}
        </div>

        <h2>Appendix</h2>

        <h3>A. Experimental Setup</h3>
        <div class="experiment-info">
            {experimental_setup}
        </div>

        <h3>B. Detailed Results</h3>
        <div class="chart-container">
            {detailed_results}
        </div>

        <h3>C. Figures</h3>
        <div class="chart-container">
            {publication_figures}
        </div>

        <div class="footer">
            <p>Generated by CrackSeg Experimental Reporting System</p>
        </div>
    </div>
"""
        return html_wrap("{{title}}", self.get_css_styles(), body)


class HTMLTechnicalTemplate(BaseHTMLTemplate):
    """Technical detailed HTML template."""

    def get_template_content(self) -> str:
        """Get technical detailed HTML template content."""
        body = """
    <div class="container">
        <h1>{title}</h1>
        <p><em>Technical Experiment Report</em><br>
        <small>Generated on {generation_timestamp}</small></p>

        <h2>📋 Experiment Information</h2>
        <div class="experiment-info">
            <div class="info-item">
                <div class="info-label">Experiment ID</div>
                <div class="info-value">{experiment_id}</div>
            </div>
            <div class="info-item">
                <div class="info-label">Experiment Name</div>
                <div class="info-value">{experiment_name}</div>
            </div>
            <div class="info-item">
                <div class="info-label">Configuration</div>
                <div class="info-value">{config_summary}</div>
            </div>
            <div class="info-item">
                <div class="info-label">Duration</div>
                <div class="info-value">{duration}</div>
            </div>
            <div class="info-item">
                <div class="info-label">Status</div>
                <div class="info-value">
                    <span class="badge badge-{status_badge}">
                        {status}
                    </span>
                </div>
            </div>
        </div>

        <h2>🎯 Executive Summary</h2>
        <div class="summary-box">
            <p>{executive_summary}</p>
        </div>

        <h2>📊 Performance Analysis</h2>

        <h3>Key Metrics</h3>
        <div class="metric-card">
            {performance_metrics}
        </div>

        <h3>Training Curves</h3>
        <div class="chart-container">
            {training_curves}
        </div>

        <h3>Detailed Analysis</h3>
        <div class="summary-box">
            {technical_details}
        </div>

        <h2>🔍 Technical Details</h2>

        <h3>Model Architecture</h3>
        <div class="experiment-info">
            {model_architecture}
        </div>

        <h3>Training Configuration</h3>
        <div class="experiment-info">
            {training_config}
        </div>

        <h3>Data Configuration</h3>
        <div class="experiment-info">
            {data_config}
        </div>

        <h2>📈 Results Analysis</h2>
        <div class="summary-box">
            {results_analysis}
        </div>

        <h2>🚀 Recommendations</h2>
        <div class="recommendation">
            {recommendations}
        </div>

        <h2>📁 Artifacts</h2>
        <div class="experiment-info">
            {artifacts}
        </div>

        <h2>📄 Metadata</h2>
        <div class="summary-box">
            {metadata}
        </div>

        <div class="footer">
            <p>Generated by CrackSeg Experimental Reporting System</p>
        </div>
    </div>
"""
        return html_wrap("{{title}}", self.get_css_styles(), body)


def get_template_class(template_name: str) -> type[BaseHTMLTemplate]:
    """Get template class by name.

    Args:
        template_name: Name of the template class.

    Returns:
        Template class.

    Raises:
        ValueError: If template class is not found.
    """
    template_classes = {
        "HTMLExecutiveSummaryTemplate": HTMLExecutiveSummaryTemplate,
        "HTMLPublicationTemplate": HTMLPublicationTemplate,
        "HTMLTechnicalTemplate": HTMLTechnicalTemplate,
    }

    if template_name not in template_classes:
        raise ValueError(f"Template class not found: {template_name}")

    return template_classes[template_name]
